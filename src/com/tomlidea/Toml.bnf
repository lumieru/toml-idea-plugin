{
  parserClass="com.tomlidea.parser.TomlParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Toml"
  psiImplClassSuffix="Impl"
  psiPackage="com.tomlidea.psi"
  psiImplPackage="com.tomlidea.psi.impl"

  elementTypeHolderClass="com.tomlidea.psi.TomlTypes"
  elementTypeClass="com.tomlidea.psi.TomlElementType"
  tokenTypeClass="com.tomlidea.psi.TomlTokenType"

  tokens=[
        comment='regexp:#[^\n\r]*'
        //double quoted multi line string
        dqmstring='regexp:("""([^"\\]|\\(.|[\r\n])|[\r\n]|(?!"""))*""")'
        //single quoted multi line string
        sqmstring="regexp:('''([\r\n]|(?!''').)*''')"
        //double quoted single line string
        dqsstring='regexp:("([^"\\\r\n]|\\.)*")'
        //single quoted single line string
        sqsstring="regexp:('[^'\r\n]*')"
        number='regexp:[-+]?[0-9](_?[0-9])*(\.[0-9](_?[0-9])*)?([eE][-+]?[0-9](_?[0-9])*)?'
        boolean='regexp:true|false'
        barekey='regexp:[0-9_\-a-zA-Z]+'
        space='regexp:\s+'
        date='regexp:[0-9]{4}-[0-9]{2}-[0-9]{2}([Tt][0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?)?([Zz]|[+-][0-9]{2}:[0-9]{2})?'
        dot='.'
        comma=','
        eq='='
        lbracket='['
        rbracket=']'
        lbrace='{'
        rbrace='}'
        sqmstrquoter="'''"
        sqmchar="regexp:([\r\n]|.)"
      ]
}

tomlFile ::= expression *

expression ::= key_value | table | table_array

table ::= table_header table_entries
table_header ::= '[' path ']'

table_array ::= table_array_header table_entries
table_array_header ::= '[' '[' path ']' ']'

key ::= barekey | dqsstring

path ::= key ('.' key) *
table_entries ::= key_value *

key_value ::= key '=' value

//TODO inline_table should be on the single line
inline_table ::= '{' (key_value (',' key_value)* ','?)? '}'

sqmcharstr ::= sqmstrquoter sqmchar * sqmstrquoter

string ::= sqmcharstr | dqmstring | sqmstring | dqsstring | sqsstring

value ::= string | number | boolean | date | array | inline_table
array ::= '[' (value (',' value)* ','?)? ']'